<?php

/**
 * BaseAnswer
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $task_id
 * @property string $name
 * @property string $info
 * @property string $value
 * @property integer $team_id
 * @property Task $Task
 * @property Team $Team
 * @property Doctrine_Collection $PostedAnswer
 * @property Doctrine_Collection $tips
 * 
 * @method integer             getId()           Returns the current record's "id" value
 * @method integer             getTaskId()       Returns the current record's "task_id" value
 * @method string              getName()         Returns the current record's "name" value
 * @method string              getInfo()         Returns the current record's "info" value
 * @method string              getValue()        Returns the current record's "value" value
 * @method integer             getTeamId()       Returns the current record's "team_id" value
 * @method Task                getTask()         Returns the current record's "Task" value
 * @method Team                getTeam()         Returns the current record's "Team" value
 * @method Doctrine_Collection getPostedAnswer() Returns the current record's "PostedAnswer" collection
 * @method Doctrine_Collection getTips()         Returns the current record's "tips" collection
 * @method Answer              setId()           Sets the current record's "id" value
 * @method Answer              setTaskId()       Sets the current record's "task_id" value
 * @method Answer              setName()         Sets the current record's "name" value
 * @method Answer              setInfo()         Sets the current record's "info" value
 * @method Answer              setValue()        Sets the current record's "value" value
 * @method Answer              setTeamId()       Sets the current record's "team_id" value
 * @method Answer              setTask()         Sets the current record's "Task" value
 * @method Answer              setTeam()         Sets the current record's "Team" value
 * @method Answer              setPostedAnswer() Sets the current record's "PostedAnswer" collection
 * @method Answer              setTips()         Sets the current record's "tips" collection
 * 
 * @package    sf
 * @subpackage model
 * @author     VozdvIN
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAnswer extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('answers');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('task_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('name', 'string', 64, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 64,
             ));
        $this->hasColumn('info', 'string', 32, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 32,
             ));
        $this->hasColumn('value', 'string', 32, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 32,
             ));
        $this->hasColumn('team_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));


        $this->index('ui_task_value', array(
             'type' => 'unique',
             'fields' => 
             array(
              0 => 'task_id',
              1 => 'value',
             ),
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Task', array(
             'local' => 'task_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Team', array(
             'local' => 'team_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('PostedAnswer', array(
             'local' => 'id',
             'foreign' => 'answer_id'));

        $this->hasMany('Tip as tips', array(
             'local' => 'id',
             'foreign' => 'answer_id'));
    }
}