<?php

/**
 * BaseArticle
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $path
 * @property string $name
 * @property clob $text
 * @property integer $web_user_id
 * @property integer $created_at
 * @property WebUser $WebUser
 * 
 * @method integer getId()          Returns the current record's "id" value
 * @method string  getPath()        Returns the current record's "path" value
 * @method string  getName()        Returns the current record's "name" value
 * @method clob    getText()        Returns the current record's "text" value
 * @method integer getWebUserId()   Returns the current record's "web_user_id" value
 * @method integer getCreatedAt()   Returns the current record's "created_at" value
 * @method WebUser getWebUser()     Returns the current record's "WebUser" value
 * @method Article setId()          Sets the current record's "id" value
 * @method Article setPath()        Sets the current record's "path" value
 * @method Article setName()        Sets the current record's "name" value
 * @method Article setText()        Sets the current record's "text" value
 * @method Article setWebUserId()   Sets the current record's "web_user_id" value
 * @method Article setCreatedAt()   Sets the current record's "created_at" value
 * @method Article setWebUser()     Sets the current record's "WebUser" value
 * 
 * @package    sf
 * @subpackage model
 * @author     VozdvIN
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseArticle extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('articles');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('path', 'string', 1024, array(
             'type' => 'string',
             'length' => 1024,
             ));
        $this->hasColumn('name', 'string', 256, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 256,
             ));
        $this->hasColumn('text', 'clob', null, array(
             'type' => 'clob',
             'notnull' => true,
             ));
        $this->hasColumn('web_user_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('created_at', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));


        $this->index('ui_id_name', array(
             'type' => 'unique',
             'fields' => 
             array(
              0 => 'id',
              1 => 'name(128)',
             ),
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('WebUser', array(
             'local' => 'web_user_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));
    }
}