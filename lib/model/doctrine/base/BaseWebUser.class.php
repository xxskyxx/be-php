<?php

/**
 * BaseWebUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $login
 * @property string $pwd_hash
 * @property string $full_name
 * @property string $email
 * @property string $tag
 * @property boolean $is_enabled
 * @property Doctrine_Collection $posts
 * @property Doctrine_Collection $grantedPermissions
 * @property Doctrine_Collection $postedAnswers
 * @property Doctrine_Collection $TeamCandidate
 * @property Doctrine_Collection $teamCreateRequests
 * @property Doctrine_Collection $TeamPlayer
 * 
 * @method integer             getId()                 Returns the current record's "id" value
 * @method string              getLogin()              Returns the current record's "login" value
 * @method string              getPwdHash()            Returns the current record's "pwd_hash" value
 * @method string              getFullName()           Returns the current record's "full_name" value
 * @method string              getEmail()              Returns the current record's "email" value
 * @method string              getTag()                Returns the current record's "tag" value
 * @method boolean             getIsEnabled()          Returns the current record's "is_enabled" value
 * @method Doctrine_Collection getPosts()              Returns the current record's "posts" collection
 * @method Doctrine_Collection getGrantedPermissions() Returns the current record's "grantedPermissions" collection
 * @method Doctrine_Collection getPostedAnswers()      Returns the current record's "postedAnswers" collection
 * @method Doctrine_Collection getTeamCandidate()      Returns the current record's "TeamCandidate" collection
 * @method Doctrine_Collection getTeamCreateRequests() Returns the current record's "teamCreateRequests" collection
 * @method Doctrine_Collection getTeamPlayer()         Returns the current record's "TeamPlayer" collection
 * @method WebUser             setId()                 Sets the current record's "id" value
 * @method WebUser             setLogin()              Sets the current record's "login" value
 * @method WebUser             setPwdHash()            Sets the current record's "pwd_hash" value
 * @method WebUser             setFullName()           Sets the current record's "full_name" value
 * @method WebUser             setEmail()              Sets the current record's "email" value
 * @method WebUser             setTag()                Sets the current record's "tag" value
 * @method WebUser             setIsEnabled()          Sets the current record's "is_enabled" value
 * @method WebUser             setPosts()              Sets the current record's "posts" collection
 * @method WebUser             setGrantedPermissions() Sets the current record's "grantedPermissions" collection
 * @method WebUser             setPostedAnswers()      Sets the current record's "postedAnswers" collection
 * @method WebUser             setTeamCandidate()      Sets the current record's "TeamCandidate" collection
 * @method WebUser             setTeamCreateRequests() Sets the current record's "teamCreateRequests" collection
 * @method WebUser             setTeamPlayer()         Sets the current record's "TeamPlayer" collection
 * 
 * @package    sf
 * @subpackage model
 * @author     VozdvIN
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseWebUser extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('web_users');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('login', 'string', 32, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 32,
             ));
        $this->hasColumn('pwd_hash', 'string', 32, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 32,
             ));
        $this->hasColumn('full_name', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('tag', 'string', 32, array(
             'type' => 'string',
             'length' => 32,
             ));
        $this->hasColumn('is_enabled', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Comment as posts', array(
             'local' => 'id',
             'foreign' => 'web_user_id'));

        $this->hasMany('GrantedPermission as grantedPermissions', array(
             'local' => 'id',
             'foreign' => 'web_user_id'));

        $this->hasMany('PostedAnswer as postedAnswers', array(
             'local' => 'id',
             'foreign' => 'web_user_id'));

        $this->hasMany('TeamCandidate', array(
             'local' => 'id',
             'foreign' => 'web_user_id'));

        $this->hasMany('TeamCreateRequest as teamCreateRequests', array(
             'local' => 'id',
             'foreign' => 'web_user_id'));

        $this->hasMany('TeamPlayer', array(
             'local' => 'id',
             'foreign' => 'web_user_id'));
    }
}