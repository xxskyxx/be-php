<?php

/**
 * BaseTaskConstraint
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $task_id
 * @property integer $target_task_id
 * @property integer $priority_shift
 * @property Task $Task
 * 
 * @method integer        getId()             Returns the current record's "id" value
 * @method integer        getTaskId()         Returns the current record's "task_id" value
 * @method integer        getTargetTaskId()   Returns the current record's "target_task_id" value
 * @method integer        getPriorityShift()  Returns the current record's "priority_shift" value
 * @method Task           getTask()           Returns the current record's "Task" value
 * @method TaskConstraint setId()             Sets the current record's "id" value
 * @method TaskConstraint setTaskId()         Sets the current record's "task_id" value
 * @method TaskConstraint setTargetTaskId()   Sets the current record's "target_task_id" value
 * @method TaskConstraint setPriorityShift()  Sets the current record's "priority_shift" value
 * @method TaskConstraint setTask()           Sets the current record's "Task" value
 * 
 * @package    sf
 * @subpackage model
 * @author     VozdvIN
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTaskConstraint extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('task_constraints');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('task_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('target_task_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('priority_shift', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             ));


        $this->index('ui_game_task_next_task', array(
             'type' => 'unique',
             'fields' => 
             array(
              0 => 'task_id',
              1 => 'target_task_id',
             ),
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Task', array(
             'local' => 'task_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}