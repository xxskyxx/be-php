<?php

/**
 * Article
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    sf
 * @subpackage model
 * @author     VozdvIN
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Article extends BaseArticle implements IAuth, IStored, INamed
{
  const MAX_ARTICLES_PER_USER = 3; // Максимальное число статей для обычного пользователя.
  const BBCODE_HELP_LINK = '<a href="/article/by/name/Оформление текста при помощи BBCode" target="new">Разрешен BBCode</a>.';
  
  //// IStored ////
  
  static function all()
  {
    return Utils::all('Article');
  }

  static function byId($id)
  {
    return Utils::byId('Article', $id);
  }
  
  //// INamed ////
 
  function getInnerName()
  {
    return $this->name;
  }
  
  static function byName($name)
  {
    return Utils::byField('Article', 'name', $name);
  }
   
  //// IAuth ////
  
  static function isModerator(WebUser $account)
  {
    return $account->can(Permission::ARTICLE_MODER, 0);
  }

  function canBeManaged(WebUser $account)
  {
    return ($account->id == $this->web_user_id)
           || $account->can(Permission::ARTICLE_MODER, $this->id);
  }

  function canBeObserved(WebUser $account)
  {
    return true;
  }
  
  //// Public ////
  
  /**
   * Возвращает имя автора статьи. Если автор уже удален - указывает это.
   * 
   * @return  string
   */
  function getAuthorNameSafe()
  {
    return ($this->web_user_id > 0) ? $this->WebUser->login : '(Анонимус)';
  }
  
  function assignAuthor(WebUser $author)
  {
    $this->web_user_id = $author->id;
  }
}

?>