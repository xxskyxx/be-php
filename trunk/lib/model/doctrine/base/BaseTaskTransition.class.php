<?php

/**
 * BaseTaskTransition
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $task_id
 * @property integer $target_task_id
 * @property boolean $allow_on_success
 * @property boolean $allow_on_fail
 * @property boolean $manual_selection
 * @property Task $Task
 * 
 * @method integer        getId()               Returns the current record's "id" value
 * @method integer        getTaskId()           Returns the current record's "task_id" value
 * @method integer        getTargetTaskId()     Returns the current record's "target_task_id" value
 * @method boolean        getAllowOnSuccess()   Returns the current record's "allow_on_success" value
 * @method boolean        getAllowOnFail()      Returns the current record's "allow_on_fail" value
 * @method boolean        getManualSelection()  Returns the current record's "manual_selection" value
 * @method Task           getTask()             Returns the current record's "Task" value
 * @method TaskTransition setId()               Sets the current record's "id" value
 * @method TaskTransition setTaskId()           Sets the current record's "task_id" value
 * @method TaskTransition setTargetTaskId()     Sets the current record's "target_task_id" value
 * @method TaskTransition setAllowOnSuccess()   Sets the current record's "allow_on_success" value
 * @method TaskTransition setAllowOnFail()      Sets the current record's "allow_on_fail" value
 * @method TaskTransition setManualSelection()  Sets the current record's "manual_selection" value
 * @method TaskTransition setTask()             Sets the current record's "Task" value
 * 
 * @package    sf
 * @subpackage model
 * @author     VozdvIN
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTaskTransition extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('task_transitions');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('task_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('target_task_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('allow_on_success', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => true,
             ));
        $this->hasColumn('allow_on_fail', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => true,
             ));
        $this->hasColumn('manual_selection', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));


        $this->index('ui_task_target_task', array(
             'type' => 'unique',
             'fields' => 
             array(
              0 => 'task_id',
              1 => 'target_task_id',
             ),
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Task', array(
             'local' => 'task_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}