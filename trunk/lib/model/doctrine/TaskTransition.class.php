<?php

/**
 * TaskTransition
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    sf
 * @subpackage model
 * @author     VozdvIN
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class TaskTransition extends BaseTaskTransition implements IStored, IAuth
{
 //// IStored ////

  static function all()
  {
    return Utils::all('TaskTransition');
  }

  static function byId($id)
  {
    return Utils::byId('TaskTransition', $id);
  }

  //// IAuth ////

  static function isModerator(WebUser $account)
  {
    return Game::isModerator($account);
  }

  function canBeManaged(WebUser $account)
  {
    return $this->Task->canBeManaged($account);
  }

  function canBeObserved(WebUser $account)
  {
    // Финт ушами, чтобы при ошибках сохранения с формы не генерилась игра-заглушка.
    $task = Task::byId($this->task_id);
    return ($task !== false) ? $task->canBeObserved($account) : false;
  }

  // Public
  
  /**
   * Возвращает целевое задание, если его можно найти.
   * 
   * @return Doctrine_Record Или false, если не найдено.
   */
  public function getTargetTaskSafe()
  {
    return Task::byId($this->target_task_id);
  }
  
  /** Проверяет, разрешен ли переход, если результат задания равен указанному.
   *
   * @param   boolean   $currentTaskResult 
   * 
   * @return  boolean
   */
  public function isTransitionPassForResult($currentTaskResult)
  {
    return ($this->allow_on_success && $this->allow_on_fail)
           || ($this->allow_on_success && $currentTaskResult)
           || ($this->allow_on_fail && (! $currentTaskResult));
  }
}