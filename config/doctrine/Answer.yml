# Ответ
Answer:
  tableName: answers
  columns:
    id: { type: integer, primary: true, notnull: true, autoincrement: true }
    # Задание
    task_id: { type: integer, notnull: true }
    # Название (отображается только организаторам)
    name: { type: string(64), notnull: true }
    # Описание типа (отображается игрокам)
    info: { type: string(32), notnull: true }
    # Значение (вводится игроками для зачета)
    value: { type: string(32), notnull: true }
    # При вводе приносит очков команде
    points: { type: integer, notnull: true, default: 0 }
    # При вводе изменяет зачетное время на, сек
    time_correction: { type: string(32), notnull: true, default: 0 }
    # Принимать только от указанной команды
    team_id: { type: integer, notnull: false, default: null }
    # После ввода кода задание принудительно завершается (успешно)
    is_force_close_task: { type: integer, notnull: false, default: null }
    # При принудительном завершении считать задание проваленным
    is_force_close_as_failed: { type: integer, notnull: false, default: null }
    # После ввода устанавливать указанное задание следующим
    force_next_task_id: { type: integer, notnull: false, default: null }
  relations:
    Task:
      foreignAlias: answers
    # При удалении задания удаляются все его ответы
      onDelete: CASCADE
    Team:
    # При удалении команды удаляются все ее персональные ответы
      onDelete: CASCADE
  indexes:
    # Ответы не могут повторяться в рамках задания
    ui_task_value:
      type: unique
      fields:
        - task_id
        - value
